{"version":3,"file":"static/js/831.1cf033ce.chunk.js","mappings":"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","sources":["AuthService.tsx","api.tsx","components/ActiveAccount/Index.tsx","components/common/Fields/PasswordField.tsx","models/ResetPasswordModel.tsx"],"sourcesContent":["import api from \"./api\";\r\n\r\nexport async function Signup(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/signup\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function Login(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/login\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ForgotPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/forgotpassword\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function CheckForResetPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/checkfortoken\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ResetPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/resetpassword\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function VerifyAccount(token: any) {\r\n  try {\r\n    const res = await api.get<any>( \"/verify\", {\r\n      headers: {\r\n        authorization: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ActivateAccount(token: any) {\r\n  try {\r\n    const res = await api.put<any>( \"/active\", { token: token });\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function RegenerateLink(data: any) {\r\n  try {\r\n    const res = await api.put<any>( \"/regeneratetoken\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nexport default axios.create({\r\n  // baseURL: `http://${process.env.REACT_APP_Host}:${process.env.REACT_APP_Port}`,\r\n  baseURL: `http://localhost:8080/api/v1`,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});","import { FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport { useParams, useOutletContext } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport setpassword from \"../../Images/setpassword.png\";\r\n\r\nimport PasswordField from \"../common/Fields/PasswordField\";\r\nimport { ResetPasswordSchema } from \"../../models/ResetPasswordModel\";\r\n\r\nimport {\r\n  RegenerateLink as RegenerateLinkService,\r\n  ResetPassword as ResetPasswordService,\r\n  ActivateAccount as ActiveAccountService,\r\n} from \"../../AuthService\";\r\n\r\nexport default function ActiveAccount() {\r\n  const [APIerror, setAPIerror] = useState(\"\");\r\n  const [APIsuccess, setAPIsuccess] = useState({\r\n    message: \"\",\r\n    id: \"\",\r\n    isFor: \"\",\r\n  });\r\n  const [APIsuccessfinal, setAPIsuccessfinal] = useState(\"\");\r\n  const [linkExpired, setlinkExpired] = useState({ message: \"\", id: \"\" });\r\n\r\n  const params = useParams();\r\n  const { handleLoading } = useOutletContext<any>();\r\n\r\n  const methods = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(ResetPasswordSchema),\r\n  });\r\n\r\n  const handleRegenerateLink = async () => {\r\n    setlinkExpired({ ...linkExpired, message: \"\" });\r\n    handleLoading(true);\r\n    const res = await RegenerateLinkService({\r\n      isFor: \"activeAccount\",\r\n      token: params.token,\r\n      id: linkExpired.id,\r\n    });\r\n    if (res.success === 1) {\r\n      setAPIsuccessfinal(res.message);\r\n      handleLoading(false);\r\n    } else if (res.success === 0) {\r\n      setAPIerror(res.message);\r\n      handleLoading(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    setAPIsuccess({ ...APIsuccess, message: \"\" });\r\n    handleLoading(true);\r\n    const res = await ResetPasswordService({\r\n      password: data.password,\r\n      id: APIsuccess.id,\r\n      isFor: APIsuccess.isFor,\r\n    });\r\n    if (res.success === 0) {\r\n      setAPIerror(res.message);\r\n      handleLoading(false);\r\n    } else if (res.success === 1) {\r\n      setAPIsuccessfinal(res.message);\r\n      handleLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ActiveAccountService(params.token).then((res) => {\r\n      if (res.success === 0) {\r\n        setAPIerror(res.message);\r\n      } else if (res.success === 1) {\r\n        setAPIsuccess({ message: res.message, id: res.id, isFor: res.isFor });\r\n      } else if (res.success === 2) {\r\n        setlinkExpired({ message: res.message, id: res.id });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container border w-full mt-4 h-full md:min-h-[400px] lg:min-h-[550px] text-primary bg-light2\">\r\n        <div className=\"w-fit mx-auto flex flex-col items-center\">\r\n          <div>\r\n            <img\r\n              src={setpassword}\r\n              alt=\"\"\r\n              className=\"h-48 w-48 lg:h-96 lg:w-96\"\r\n            />\r\n          </div>\r\n          {APIerror.length > 0 && (\r\n            <div className=\"text-xl text-secondary  bg-warning rounded py-2 my-2 px-2\">\r\n              {APIerror}\r\n            </div>\r\n          )}\r\n          {APIsuccessfinal.length > 0 && (\r\n            <div className=\"text-xl text-secondary  bg-success rounded py-2 my-2 px-2\">\r\n              {APIsuccessfinal}\r\n            </div>\r\n          )}\r\n          {linkExpired.message.length > 0 && (\r\n            <div>\r\n              <p className=\"\">\r\n                Link is expired please{\" \"}\r\n                <button\r\n                  className=\"underline text-light1 active:text-primary\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleRegenerateLink();\r\n                  }}\r\n                >\r\n                  click Here\r\n                </button>{\" \"}\r\n                to regenerate Link\r\n              </p>\r\n            </div>\r\n          )}\r\n          {APIsuccess.message.length > 0 && (\r\n            <div className=\" text-primary  w-full max-w-[420px] rounded p-2 my-2\">\r\n              <div className=\"text\">\r\n                {\" \"}\r\n                Set password for your account to activate account{\" \"}\r\n              </div>\r\n              <FormProvider {...methods}>\r\n                <form\r\n                  onSubmit={methods.handleSubmit(onSubmit)}\r\n                  className=\"w-full\"\r\n                >\r\n                  <PasswordField fieldname=\"password\" label=\"Password\" />\r\n                  <PasswordField\r\n                    fieldname=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`px-10  font-semibold border border-light1 text-lg mt-3  rounded-xl text-center subpixel-antialiased \r\n                       ${\r\n                         methods.formState.isValid\r\n                           ? \"text-primary\"\r\n                           : \"text-light1\"\r\n                       }`}\r\n                  >\r\n                    submit\r\n                  </button>\r\n                </form>\r\n              </FormProvider>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useFormContext, useController } from \"react-hook-form\";\r\n\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function PasswordField({ fieldname, label, ...rest }: any) {\r\n  const methods = useFormContext();\r\n  const registration = methods.register(fieldname);\r\n  const { fieldState } = useController({ name: fieldname });\r\n  let error = fieldState?.error;\r\n\r\n  const [togglePasswordVisibility, settogglePasswordVisibility] = useState(0);\r\n\r\n  function HandlePasswordVisibilityToggle() {\r\n    if (togglePasswordVisibility === 0) settogglePasswordVisibility(1);\r\n    else settogglePasswordVisibility(0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex mt-5 space-x-2\">\r\n        <div className=\"relative w-full\">\r\n          <div className=\"form-floating w-full\">\r\n            <input\r\n              type={togglePasswordVisibility === 1 ? \"text\" : \"password\"}\r\n              {...registration}\r\n              {...rest}\r\n              className=\"form-control  block rounded px-2.5 pb-2.5 pt-5 w-full text-sm border\r\n            transition ease-in-out m-0  focus:outline-none focus:ring-0\"\r\n              placeholder={label}\r\n              autoComplete=\"on\"\r\n            />\r\n            <label className=\"text-primary capitalize\">{label}</label>\r\n          </div>\r\n          <label\r\n            className=\"absolute text-lg right-1 z-1 bottom-3.5 \"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              HandlePasswordVisibilityToggle();\r\n            }}\r\n          >\r\n            {togglePasswordVisibility === 0 ? (\r\n              <AiOutlineEye className=\"w-7 h-6\" />\r\n            ) : (\r\n              <AiOutlineEyeInvisible className=\"w-7 h-6\" />\r\n            )}\r\n          </label>\r\n        </div>\r\n        <div\r\n          className={`w-2 ${\r\n            error?.type !== \"required\" ? \"text-primary\" : \"text-danger\"\r\n          }`}\r\n        >\r\n          *\r\n        </div>\r\n      </div>\r\n      <div className=\"text-sm text-danger capitalize\">{error?.message}</div>\r\n    </>\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\n\r\nconst ResetPasswordSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .required(\"password is  Required\")\r\n    .matches(/.*[0-9].*/, \"at least one number is required\")\r\n    .matches(/(?=.*[A-Z])/, \"at least one capital letter is required\")\r\n    .matches(/(?=.*[@$!%*?&])/, \"at least one special charcter is required\")\r\n    .min(8, \"Min 8 Character is Required\")\r\n    .max(18, \"Max 18 Character is Allowed\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"confirm password is required\")\r\n    .matches(/.*[0-9].*/, \"at least one number is required\")\r\n    .matches(/(?=.*[A-Z])/, \"at least one capital letter is required\")\r\n    .matches(/(?=.*[@$!%*?&])/, \"at least one special charcter is required\")\r\n    .min(8, \"Min 8 Character is Required\")\r\n    .max(18, \"Max 18 Character is Allowed\")\r\n    .oneOf(\r\n      [Yup.ref(\"password\")],\r\n      \"confirm Password doesn't match with the password\"\r\n    ),\r\n});\r\nexport { ResetPasswordSchema };\r\n"],"names":["Signup","data","api","res","response","Login","ForgotPassword","CheckForResetPassword","ResetPassword","VerifyAccount","token","headers","authorization","Accept","ActivateAccount","RegenerateLink","axios","baseURL","ActiveAccount","useState","APIerror","setAPIerror","message","id","isFor","APIsuccess","setAPIsuccess","APIsuccessfinal","setAPIsuccessfinal","linkExpired","setlinkExpired","params","useParams","handleLoading","useOutletContext","methods","useForm","mode","resolver","yupResolver","ResetPasswordSchema","handleRegenerateLink","RegenerateLinkService","success","onSubmit","ResetPasswordService","password","useEffect","ActiveAccountService","then","className","src","setpassword","alt","length","onClick","e","preventDefault","handleSubmit","PasswordField","fieldname","label","type","formState","isValid","rest","registration","useFormContext","register","fieldState","useController","name","error","togglePasswordVisibility","settogglePasswordVisibility","placeholder","autoComplete","Yup","shape","required","matches","min","max","confirmPassword","oneOf"],"sourceRoot":""}