{"version":3,"file":"static/js/464.146403e6.chunk.js","mappings":"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","sources":["AuthService.tsx","api.tsx","models/LoginModel.tsx","components/Login/Login.tsx","components/common/Fields/PasswordField.tsx","components/common/Fields/TextField.tsx"],"sourcesContent":["import api from \"./api\";\r\n\r\nexport async function Signup(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/signup\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function Login(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/login\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ForgotPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/forgotpassword\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function CheckForResetPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/checkfortoken\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ResetPassword(data: any) {\r\n  try {\r\n    const res = await api.post<any>( \"/resetpassword\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function VerifyAccount(token: any) {\r\n  try {\r\n    const res = await api.get<any>( \"/verify\", {\r\n      headers: {\r\n        authorization: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function ActivateAccount(token: any) {\r\n  try {\r\n    const res = await api.put<any>( \"/active\", { token: token });\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n\r\nexport async function RegenerateLink(data: any) {\r\n  try {\r\n    const res = await api.put<any>( \"/regeneratetoken\", data);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    return error.response.data;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nexport default axios.create({\r\n  // baseURL: `http://${process.env.REACT_APP_Host}:${process.env.REACT_APP_Port}`,\r\n  baseURL: `http://localhost:8080/api/v1`,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});","import * as Yup from \"yup\";\r\n\r\nconst LoginDetailSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Email is  required\")\r\n    .email()\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"please enter valid email\"),\r\n  password: Yup.string().required(\"Password is Required\"),\r\n});\r\n\r\nexport { LoginDetailSchema };\r\n","import { FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useOutletContext, useNavigate, Link } from \"react-router-dom\";\r\n\r\nimport { Login as LoginService } from \"../../AuthService\";\r\n\r\nimport TextField from \"../common/Fields/TextField\";\r\nimport PasswordField from \"../common/Fields/PasswordField\";\r\nimport { LoginDetailSchema } from \"../../models/LoginModel\";\r\n\r\nimport { AiOutlineWarning } from \"react-icons/ai\";\r\nimport login from \"../../Images/login.jpg\";\r\n\r\nexport default function Login() {\r\n  const [APIerror, setAPIerror] = useState();\r\n\r\n  const navigate = useNavigate();\r\n  let { setLoguser, handleLoading } = useOutletContext<any>();\r\n\r\n  const methods = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(LoginDetailSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: any) => {\r\n    const res = await LoginService(data);\r\n    handleLoading(true);\r\n    if (res.success === 1) {\r\n      sessionStorage.setItem(\"Access\", res.token);\r\n      sessionStorage.setItem(\"User\", JSON.stringify(res.LOGuser));\r\n      navigate(\"/admin\");\r\n      setLoguser(res.LOGuser);\r\n      methods.reset();\r\n      handleLoading(false);\r\n    } else {\r\n      setAPIerror(res.message);\r\n      methods.reset();\r\n      handleLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const logUser = sessionStorage.getItem(\"User\");\r\n    if (logUser) {\r\n      navigate(\"/admin\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"bg-light2 text-primary\">\r\n      <div className=\"container flex flex-col lg:flex-row-reverse justify-between\">\r\n        <div className=\"basis-1/2\">\r\n          <img\r\n            src={login}\r\n            alt=\"\"\r\n            className=\"h-96 w-96  mx-auto lg:h-full lg:w-full\"\r\n          />\r\n        </div>\r\n        <FormProvider {...methods}>\r\n          <form\r\n            onSubmit={methods.handleSubmit(onSubmit)}\r\n            className=\"p-5  basis-1/2\"\r\n          >\r\n            <div className=\" mx-auto lg:py-20 mt-8 max-w-[420px]\">\r\n              <div className=\"text-3xl text-center\">Login</div>\r\n              {/* error from apis */}\r\n              {APIerror && (\r\n                <div className=\"text-xl text-secondary flex space-x-4 items-center bg-warning rounded py-2 my-2 px-2\">\r\n                  <AiOutlineWarning className=\"text-5xl\" />{\" \"}\r\n                  <span>{APIerror} </span>\r\n                </div>\r\n              )}\r\n              <TextField\r\n                label=\"Email\"\r\n                fieldname=\"email\"\r\n                type=\"email\"\r\n                required={true}\r\n              />\r\n              <PasswordField label=\"password\" fieldname=\"password\" />\r\n              <div className=\"text-sm capitalize mt-1\">\r\n                <Link to={\"/forgotpassword\"}>forgot password ?</Link>\r\n              </div>\r\n              <div className=\"mt-6 mb-3\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`px-10  font-semibold border border-light1 text-lg  rounded-xl text-center subpixel-antialiased \r\n              ${methods.formState.isValid ? \"text-primary\" : \"text-light1\"}`}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <small className=\"capitalize \">\r\n                  {\" \"}\r\n                  don't have account?{\" \"}\r\n                  <Link to=\"/signup\" className=\"text-secondary\">\r\n                    sign up\r\n                  </Link>\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </FormProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useFormContext, useController } from \"react-hook-form\";\r\n\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nexport default function PasswordField({ fieldname, label, ...rest }: any) {\r\n  const methods = useFormContext();\r\n  const registration = methods.register(fieldname);\r\n  const { fieldState } = useController({ name: fieldname });\r\n  let error = fieldState?.error;\r\n\r\n  const [togglePasswordVisibility, settogglePasswordVisibility] = useState(0);\r\n\r\n  function HandlePasswordVisibilityToggle() {\r\n    if (togglePasswordVisibility === 0) settogglePasswordVisibility(1);\r\n    else settogglePasswordVisibility(0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex mt-5 space-x-2\">\r\n        <div className=\"relative w-full\">\r\n          <div className=\"form-floating w-full\">\r\n            <input\r\n              type={togglePasswordVisibility === 1 ? \"text\" : \"password\"}\r\n              {...registration}\r\n              {...rest}\r\n              className=\"form-control  block rounded px-2.5 pb-2.5 pt-5 w-full text-sm border\r\n            transition ease-in-out m-0  focus:outline-none focus:ring-0\"\r\n              placeholder={label}\r\n              autoComplete=\"on\"\r\n            />\r\n            <label className=\"text-primary capitalize\">{label}</label>\r\n          </div>\r\n          <label\r\n            className=\"absolute text-lg right-1 z-1 bottom-3.5 \"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              HandlePasswordVisibilityToggle();\r\n            }}\r\n          >\r\n            {togglePasswordVisibility === 0 ? (\r\n              <AiOutlineEye className=\"w-7 h-6\" />\r\n            ) : (\r\n              <AiOutlineEyeInvisible className=\"w-7 h-6\" />\r\n            )}\r\n          </label>\r\n        </div>\r\n        <div\r\n          className={`w-2 ${\r\n            error?.type !== \"required\" ? \"text-primary\" : \"text-danger\"\r\n          }`}\r\n        >\r\n          *\r\n        </div>\r\n      </div>\r\n      <div className=\"text-sm text-danger capitalize\">{error?.message}</div>\r\n    </>\r\n  );\r\n}\r\n","import { useFormContext, useController } from \"react-hook-form\";\r\n\r\nexport default function TextField({\r\n  fieldname,\r\n  required,\r\n  type,\r\n  label,\r\n  ...rest\r\n}: any) {\r\n  const methods = useFormContext();\r\n  const registration = methods.register(fieldname);\r\n  const { fieldState } = useController({ name: fieldname });\r\n  let error = fieldState?.error;\r\n  return (\r\n    <div>\r\n      <div className=\"flex mt-5 w-full space-x-2\">\r\n        <div className=\"form-floating  w-full\">\r\n          <input\r\n            type={type ? type : \"text\"}\r\n            {...registration}\r\n            {...rest}\r\n            className=\"form-control  block rounded px-2.5 pb-2.5 pt-5 w-full text-sm border\r\n            transition ease-in-out m-0  focus:outline-none focus:ring-0\"\r\n            placeholder={label}\r\n            onKeyDown={(e) => {\r\n              if (type === \"number\" && e.code === \"KeyE\") {\r\n                e.preventDefault();\r\n              }\r\n              if (\r\n                fieldname === \"identifier\" &&\r\n                methods.getValues(fieldname).length >= 14 &&\r\n                (parseInt(e.key) <= 9 ||\r\n                  parseInt(e.key) >= 0 ||\r\n                  e.key === \"-\" ||\r\n                  e.key === \"+\")\r\n              ) {\r\n                e.preventDefault();\r\n              }\r\n              if (\r\n                fieldname === \"postcode\" &&\r\n                methods.getValues(fieldname).length >= 6 &&\r\n                (parseInt(e.key) <= 9 ||\r\n                  parseInt(e.key) >= 0 ||\r\n                  e.key === \"-\" ||\r\n                  e.key === \"+\")\r\n              ) {\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <label className=\"text-primary\">{label}</label>\r\n        </div>\r\n        <div\r\n          className={`w-2 ${\r\n            error?.type !== \"required\" ? \"text-primary\" : \"text-danger\"\r\n          }`}\r\n        >\r\n          {required && <span>*</span>}\r\n        </div>\r\n      </div>\r\n      <div className=\"text-sm text-danger capitalize\">{error?.message}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Signup","data","api","res","response","Login","ForgotPassword","CheckForResetPassword","ResetPassword","VerifyAccount","token","headers","authorization","Accept","ActivateAccount","RegenerateLink","axios","baseURL","LoginDetailSchema","Yup","shape","email","required","matches","password","useState","APIerror","setAPIerror","navigate","useNavigate","useOutletContext","setLoguser","handleLoading","methods","useForm","mode","resolver","yupResolver","onSubmit","LoginService","success","sessionStorage","setItem","JSON","stringify","LOGuser","reset","message","useEffect","getItem","className","src","login","alt","handleSubmit","TextField","label","fieldname","type","PasswordField","to","formState","isValid","rest","registration","useFormContext","register","fieldState","useController","name","error","togglePasswordVisibility","settogglePasswordVisibility","placeholder","autoComplete","onClick","e","preventDefault","onKeyDown","code","getValues","length","parseInt","key"],"sourceRoot":""}